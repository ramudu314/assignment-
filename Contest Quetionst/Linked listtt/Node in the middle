/*
class Node {
    Node next;
    int val;

    Node(int val) {
        this.val = val;
        next = null;
    }
}
*/

public static Node deleteMiddleElement(Node head) {
    if (head == null || head.next == null) {
        return null;  // No middle element to delete
    }

    Node slow = head;
    Node fast = head;
    Node prev = null;

    while (fast != null && fast.next != null) {
        prev = slow;
        slow = slow.next;
        fast = fast.next.next;
    }

    // Delete the second middle node for even-length linked lists
    if (prev != null) {
        prev.next = slow.next;
    } else {
        // Update the head for odd-length linked lists
        head = slow.next;
    }

    return head;
}
